{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Name: Jason Phung\
Student ID: 1047734\
Email: phungj@uoguelph.ca\
Description: Assignment 3 with analyze at the end of the readme.txt\
\
To compile, first type \'93make clean\'94 to ensure everything is cleaned.\
Then type \'93make\'94 to compile two executables\
To run questions 1.1 and 1.2, type: ./p1\
To run questions 2.1, 2.2, and 2.3, type: ./p2\
\
Question 2.4 (Analyze performance: Brute Force vs Horspool)\
Number of letters:		Brute Force			Horspool\
				Shifts 	Milliseconds		Shifts 	Milliseconds\
	2			2610199	29.311			1363681	31.016\
	3			3070430	35.682			1181515	30.539\
	4			3119422	28.299			976308	32.060\
	5			3072785	28.577			707285	32.615\
	6			3032300	25.989			582784	23.634\
	7			2899611	26.962			486933	27.925\
	8			2944171	27.915			579547	32.322\
	9			2899666	25.664			416701	28.564\
	10			2781302	24.628			393222	28.143\
	11			2806787	27.920			423841	29.127\
\
Average shift/millisecond:\
Brute force: 105008 shifts/millisecond\
Horspool: 23792 shifts/millisecond\
It is evident from the data that, even though both the Brute force algorithm and Horspool algorithm on average have the same running time, Horspool\'92s algorithm has a lower shifts/millisecond ratio. This means that the Horpool\'92s algorithm is more effective, and cost less to find a pattern since it shifts less.}